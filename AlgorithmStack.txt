Algorithm to Implement Stack Abstract Data Type with Linked list using pointers


Algorithm:


Step 1: Include Header Files


Step 2: Declare the Stack, Functions and variables


Step 3: Inside Main function ask for the choice by prompting,
	1.Push
	2.Pop
	3.Peek
	4.Print
	(0 to exit)
	Enter Your Choice:


Step 4: If choice is 1:
	4.1: call the Push Function (goto Step 9)


Step 5: If choice is 2:
	5.1: call the Pop Function (goto Step 10)


Step 6: If choice is 3:
	6.1: call the Peek Function (goto Step 11)


Step 7: If choice is 4:
	7.1: call the Print Function (goto Step 12)


Step 8: If choice is 0:
	8.1: exit the Program


Step 9: Implementation of Push Function
	9.1: Get the element to push

	9.2: check if the stack is empty
		if empty:
			1.update element as first stack element
			3.exit the function
		else:
			1.continue with the push function

	9.3: use while loop to itteration through stack
		if the curent node's next field is NULL
			1.set the new node data field to the data given by the user in the step 9.1
			2.set current node's next field to new node
			3.set new node's next field to NULL
			4.exit the function
		else:
			1.goto the next node

	9.4: exit the function
	


Step 10: Implementation of pop Function

	10.1: check if the stack is empty
		if empty:
			1.display stack is empty
			2.exit function
		else:
			1.continue with the pop function

	10.3: use while loop to itteration through stack 
		if the curent node's next field is NULL
			1.pop the element and print it
			2.exit the function
		else:
			1.go to the next element node


Step 11: Implementation of Peek function

	11.2: check if the stack is empty
		if empty:
			1.display stack is empty
			2.exit function
		else:
			1.continue with the Peek function

	11.3: use while loop to itterate through the stack
		if the current node is the last node of the stack:
			1.print the element
			2.exit the function
		else:
			1.goto the next node

Step 12: Implementation of Print function

	12.1: check if the stack is empty
		if empty:
			1.display stack is empty
			2.exit function
		else:
			1.continue with the Print function

	12.2: use while loop to itteration through stack
		1.print the element
		2.goto the next node

	12.3: exit the function